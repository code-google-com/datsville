// Generated by L3P v1.4 BETA 20080930 (Win32)  (C) 1998-2008 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sun Jan 01 21:01:32 2012
// Input file:   W:\mecha\povray\tree_smallgroup_rand.ldr
// Title:        Untitled
// Author:       Michael Horvath
// ModelDir:     W:\mecha\povray
// WorkDir:      W:\mecha\povray
// LDRAWDIR:     D:\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   W:\mecha\povray\ (0x10)
// SearchDir2:   D:\LDraw\P\ (0x9)
// SearchDir3:   D:\LDraw\PARTS\ (0x4)
// SearchDir4:   D:\LDraw\MODELS\ (0x0)
// ldconfig.ldr: D:\LDraw\ldconfig.ldr
// Commandline:  "C:\Programs Windows\l3p14beta\l3p.exe" W:\mecha\povray\tree_smallgroup_rand.ldr -o -ic -il -ibmecha.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "mecha.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(156,153,153)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 2 Green (from ldconfig.ldr)
#ifndef (L3Texture2)
#declare L3Texture2 = L3TextureOpaqueRGB(0,140,20)
#end
#ifndef (L3Texture2_slope)
#declare L3Texture2_slope = L3TextureSlope(L3Texture2)
#end
#ifndef (L3Color2)
#declare L3Color2 = L3Material(L3Texture2)
#end
#ifndef (L3Color2_slope)
#declare L3Color2_slope = L3Material(L3Texture2_slope)
#end


//// Part s\688s01.dat
#ifndef (s_slash_688s01_dot_dat)
#declare s_slash_688s01_dot_dat = #if (L3Quality = 0) box { <0,-255,0>, <46.83,-28,47> } #else object {
// ~Plant Tree Cedar  4 x  4 x 11 & 1/2 - Quarter
// Name: s\688s01.dat
// Author: Tore Eriksson [simlego]
// !LDRAW_ORG Subpart UPDATE 2004-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2004-03-23 [westrate] Quartered, fixed non-coplanar quads, BFC'ed
// !HISTORY 2004-09-15 [PTadmin] Official Update 2004-03
// !HISTORY 2007-09-10 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	mesh {
		triangle { <0,-34,0>, <10,-34,0>, <10,-34,4> }
		triangle { <10,-34,4>, <0,-34,4>, <0,-34,0> }
		triangle { <0,-34,4>, <17.55,-34,4>, <16.6302,-34,6.8886> }
		triangle { <16.6302,-34,6.8886>, <12.7278,-34,12.7278>, <0,-34,4> }
		triangle { <0,-34,4>, <12.7278,-34,12.7278>, <6.8886,-34,16.6302> }
		triangle { <6.8886,-34,16.6302>, <0,-34,18>, <0,-34,4> }
		triangle { <10,-34,4>, <10,-34,0>, <10,-30.2,0> }
		triangle { <10,-30.2,0>, <10,-30.2,4>, <10,-34,4> }
		triangle { <10,-30.2,4>, <17.55,-34,4>, <10,-34,4> }
		triangle { <17.55,-34,4>, <10,-30.2,4>, <16.6302,-34,6.8886> }
		triangle { <9.75,-41,4>, <9.75,-41,0>, <0,-41,0> }
		triangle { <0,-41,0>, <0,-41,4>, <9.75,-41,4> }
		triangle { <22.45,-41,15>, <26.7,-41,4>, <0,-41,4> }
		triangle { <0,-41,4>, <5,-41,15>, <22.45,-41,15> }
		triangle { <5,-41,25>, <5,-41,15>, <0,-41,4> }
		triangle { <0,-41,4>, <0,-41,27>, <5,-41,25> }
		triangle { <0,-41,27>, <10.2,-41,25>, <5,-41,25> }
		triangle { <0,-47,0>, <9.75,-47,0>, <9.75,-47,4> }
		triangle { <9.75,-47,4>, <0,-47,4>, <0,-47,0> }
		triangle { <0,-47,4>, <31.75,-47,4>, <28.27,-47,15> }
		triangle { <28.27,-47,15>, <5,-47,15>, <0,-47,4> }
		triangle { <0,-47,4>, <5,-47,15>, <5,-47,25> }
		triangle { <5,-47,25>, <0,-47,32>, <0,-47,4> }
		triangle { <12.2464,-47,29.5648>, <0,-47,32>, <5,-47,25> }
		triangle { <5,-47,25>, <19.975,-47,25>, <12.2464,-47,29.5648> }
		triangle { <12.2464,-47,29.5648>, <19.975,-47,25>, <10.2,-41,25> }
		triangle { <5,-47,25>, <5,-41,25>, <10.2,-41,25> }
		triangle { <10.2,-41,25>, <19.975,-47,25>, <5,-47,25> }
		triangle { <5,-47,15>, <5,-41,15>, <5,-41,25> }
		triangle { <5,-41,25>, <5,-47,25>, <5,-47,15> }
		triangle { <5,-47,15>, <28.27,-47,15>, <22.45,-41,15> }
		triangle { <22.45,-41,15>, <5,-41,15>, <5,-47,15> }
		triangle { <31.75,-47,4>, <10,-47,4>, <10,-41,4> }
		triangle { <10,-41,4>, <26.7,-41,4>, <31.75,-47,4> }
		triangle { <9.5,-54,4>, <9.5,-54,0>, <0,-54,0> }
		triangle { <0,-54,0>, <0,-54,4>, <9.5,-54,4> }
		triangle { <16,-54,32.24>, <25.9,-54,25>, <8,-54,25> }
		triangle { <8,-54,25>, <8.43,-54,35>, <16,-54,32.24> }
		triangle { <5,-54,35.65>, <8.43,-54,35>, <8,-54,25> }
		triangle { <8,-54,25>, <0,-54,36>, <5,-54,35.65> }
		triangle { <0,-54,15>, <32.73,-54,15>, <35.78,-54,4> }
		triangle { <35.78,-54,4>, <0,-54,4>, <0,-54,15> }
		triangle { <0,-54,25>, <8,-54,25>, <8,-54,15> }
		triangle { <8,-54,15>, <0,-54,15>, <0,-54,25> }
		triangle { <8,-54,25>, <0,-54,25>, <0,-54,36> }
		triangle { <0,-60,0>, <9.5,-60,0>, <9.5,-60,4> }
		triangle { <9.5,-60,4>, <0,-60,4>, <0,-60,0> }
		triangle { <8,-60,25>, <31.22,-60,25>, <17.44,-60,36> }
		triangle { <17.44,-60,36>, <5,-60,36>, <8,-60,25> }
		triangle { <0,-60,40>, <8,-60,25>, <5,-60,36> }
		triangle { <5,-60,36>, <5,-60,39.69>, <0,-60,40> }
		triangle { <9.5,-54,4>, <35.78,-54,4>, <39.8,-60,4> }
		triangle { <39.8,-60,4>, <9.5,-60,4>, <9.5,-54,4> }
		triangle { <32.73,-54,15>, <8,-54,15>, <8,-60,15> }
		triangle { <8,-60,15>, <37.08,-60,15>, <32.73,-54,15> }
		triangle { <8,-54,15>, <8,-54,25>, <8,-60,25> }
		triangle { <8,-60,25>, <8,-60,15>, <8,-54,15> }
		triangle { <8,-54,25>, <25.9,-54,25>, <31.22,-60,25> }
		triangle { <31.22,-60,25>, <8,-60,25>, <8,-54,25> }
		triangle { <5,-60,36>, <17.44,-60,36>, <8.43,-54,35> }
		triangle { <16,-54,32.24>, <8.43,-54,35>, <17.44,-60,36> }
		triangle { <8.43,-54,35>, <5,-54,35.65>, <5,-60,36> }
		triangle { <5,-60,39.69>, <5,-60,36>, <5,-54,35.65> }
		triangle { <39.8,-60,4>, <37.08,-60,15>, <0,-60,15> }
		triangle { <0,-60,15>, <0,-60,4>, <39.8,-60,4> }
		triangle { <8,-60,15>, <8,-60,25>, <0,-60,25> }
		triangle { <0,-60,25>, <0,-60,15>, <8,-60,15> }
		triangle { <0,-60,40>, <0,-60,25>, <8,-60,25> }
		triangle { <9.25,-67,4>, <9.25,-67,0>, <0,-67,0> }
		triangle { <0,-67,0>, <0,-67,4>, <9.25,-67,4> }
		triangle { <29.694,-67,29.694>, <33.75,-67,25>, <8,-67,25> }
		triangle { <8,-67,25>, <21.63,-67,36>, <29.694,-67,29.694> }
		triangle { <5,-67,36>, <21.63,-67,36>, <8,-67,25> }
		triangle { <0,-67,42>, <5,-67,41.7>, <5,-67,36> }
		triangle { <0,-67,15>, <39.23,-67,15>, <41.81,-67,4> }
		triangle { <41.81,-67,4>, <0,-67,4>, <0,-67,15> }
		triangle { <0,-67,25>, <8,-67,25>, <8,-67,15> }
		triangle { <8,-67,15>, <0,-67,15>, <0,-67,25> }
		triangle { <8,-67,25>, <0,-67,25>, <0,-67,36> }
		triangle { <0,-67,36>, <5,-67,36>, <8,-67,25> }
		triangle { <0,-67,42>, <5,-67,36>, <0,-67,36> }
		triangle { <0,-73,0>, <9.25,-73,0>, <9.25,-73,4> }
		triangle { <9.25,-73,4>, <0,-73,4>, <0,-73,0> }
		triangle { <9.25,-73,4>, <9.25,-67,4>, <41.81,-67,4> }
		triangle { <41.81,-67,4>, <43.82,-73,4>, <9.25,-73,4> }
		triangle { <41.36,-73,15>, <39.23,-67,15>, <8,-67,15> }
		triangle { <8,-67,15>, <8,-73,15>, <41.36,-73,15> }
		triangle { <8,-73,15>, <8,-67,15>, <8,-67,25> }
		triangle { <8,-67,25>, <8,-73,25>, <8,-73,15> }
		triangle { <8,-73,25>, <8,-67,25>, <33.75,-67,25> }
		triangle { <33.75,-67,25>, <36.21,-73,25>, <8,-73,25> }
		triangle { <25.3,-73,36>, <21.63,-67,36>, <5,-67,36> }
		triangle { <5,-67,36>, <5,-73,36>, <25.3,-73,36> }
		triangle { <5,-73,36>, <5,-67,36>, <5,-67,41.7> }
		triangle { <5,-67,41.7>, <5,-73,43.715>, <5,-73,36> }
		triangle { <8,-73,25>, <36.21,-73,25>, <31.11,-73,31.11> }
		triangle { <31.11,-73,31.11>, <25.3,-73,36>, <8,-73,25> }
		triangle { <8,-73,25>, <25.3,-73,36>, <5,-73,36> }
		triangle { <5,-73,36>, <5,-73,43.715>, <0,-73,44> }
		triangle { <43.82,-73,4>, <41.36,-73,15>, <0,-73,15> }
		triangle { <0,-73,15>, <0,-73,4>, <43.82,-73,4> }
		triangle { <8,-73,15>, <8,-73,25>, <0,-73,25> }
		triangle { <0,-73,25>, <0,-73,15>, <8,-73,15> }
		triangle { <0,-73,36>, <0,-73,25>, <8,-73,25> }
		triangle { <8,-73,25>, <5,-73,36>, <0,-73,36> }
		triangle { <0,-73,36>, <5,-73,36>, <0,-73,44> }
		triangle { <9,-80,4>, <9,-80,0>, <0,-80,0> }
		triangle { <0,-80,0>, <0,-80,4>, <9,-80,4> }
		triangle { <32.52,-80,32.52>, <38.61,-80,25>, <8,-80,25> }
		triangle { <8,-80,25>, <28.636,-80,36>, <32.52,-80,32.52> }
		triangle { <5,-80,36>, <28.636,-80,36>, <8,-80,25> }
		triangle { <0,-80,46>, <5,-80,45.73>, <5,-80,36> }
		triangle { <0,-80,15>, <43.486,-80,15>, <45.826,-80,4> }
		triangle { <45.826,-80,4>, <0,-80,4>, <0,-80,15> }
		triangle { <0,-80,25>, <8,-80,25>, <8,-80,15> }
		triangle { <8,-80,15>, <0,-80,15>, <0,-80,25> }
		triangle { <8,-80,25>, <0,-80,25>, <0,-80,36> }
		triangle { <0,-80,36>, <5,-80,36>, <8,-80,25> }
		triangle { <0,-80,46>, <5,-80,36>, <0,-80,36> }
		triangle { <0,-86,0>, <9,-86,0>, <9,-86,4> }
		triangle { <9,-86,4>, <0,-86,4>, <0,-86,0> }
		triangle { <9,-86,4>, <9,-80,4>, <45.826,-80,4> }
		triangle { <45.826,-80,4>, <46.83,-86,4>, <9,-86,4> }
		triangle { <44.54,-86,15>, <43.486,-80,15>, <8,-80,15> }
		triangle { <8,-80,15>, <8,-86,15>, <44.54,-86,15> }
		triangle { <8,-86,15>, <8,-80,15>, <8,-80,25> }
		triangle { <8,-80,25>, <8,-86,25>, <8,-86,15> }
		triangle { <8,-86,25>, <8,-80,25>, <38.61,-80,25> }
		triangle { <38.61,-80,25>, <39.8,-86,25>, <8,-86,25> }
		triangle { <30.215,-86,36>, <28.636,-80,36>, <5,-80,36> }
		triangle { <5,-80,36>, <5,-86,36>, <30.215,-86,36> }
		triangle { <5,-86,36>, <5,-80,36>, <5,-80,45.73> }
		triangle { <5,-80,45.73>, <5,-86,46.733>, <5,-86,36> }
		triangle { <8,-86,25>, <39.8,-86,25>, <33.23,-86,33.23> }
		triangle { <33.23,-86,33.23>, <30.215,-86,36>, <8,-86,25> }
		triangle { <8,-86,25>, <30.215,-86,36>, <5,-86,36> }
		triangle { <5,-86,36>, <5,-86,46.733>, <0,-86,47> }
		triangle { <46.83,-86,4>, <44.54,-86,15>, <0,-86,15> }
		triangle { <0,-86,15>, <0,-86,4>, <46.83,-86,4> }
		triangle { <8,-86,15>, <8,-86,25>, <0,-86,25> }
		triangle { <0,-86,25>, <0,-86,15>, <8,-86,15> }
		triangle { <0,-86,36>, <0,-86,25>, <8,-86,25> }
		triangle { <8,-86,25>, <5,-86,36>, <0,-86,36> }
		triangle { <0,-86,36>, <5,-86,36>, <0,-86,47> }
		triangle { <8.75,-93,4>, <8.75,-93,0>, <0,-93,0> }
		triangle { <0,-93,0>, <0,-93,4>, <8.75,-93,4> }
		triangle { <33.23,-93,33.23>, <39.8,-93,25>, <8,-93,25> }
		triangle { <8,-93,25>, <30.215,-93,36>, <33.23,-93,33.23> }
		triangle { <5,-93,36>, <30.215,-93,36>, <8,-93,25> }
		triangle { <0,-93,47>, <5,-93,46.733>, <5,-93,36> }
		triangle { <0,-93,15>, <44.54,-93,15>, <46.83,-93,4> }
		triangle { <46.83,-93,4>, <0,-93,4>, <0,-93,15> }
		triangle { <0,-93,25>, <8,-93,25>, <8,-93,15> }
		triangle { <8,-93,15>, <0,-93,15>, <0,-93,25> }
		triangle { <8,-93,25>, <0,-93,25>, <0,-93,36> }
		triangle { <0,-93,36>, <5,-93,36>, <8,-93,25> }
		triangle { <0,-93,47>, <5,-93,36>, <0,-93,36> }
		triangle { <0,-99,0>, <8.75,-99,0>, <8.75,-99,4> }
		triangle { <8.75,-99,4>, <0,-99,4>, <0,-99,0> }
		triangle { <8.75,-99,4>, <8.75,-93,4>, <46.83,-93,4> }
		triangle { <46.83,-93,4>, <46.83,-99,4>, <8.75,-99,4> }
		triangle { <46.83,-99,4>, <46.83,-93,4>, <44.54,-93,15> }
		triangle { <44.54,-93,15>, <44.54,-99,15>, <46.83,-99,4> }
		triangle { <44.54,-99,15>, <44.54,-93,15>, <8,-93,15> }
		triangle { <8,-93,15>, <8,-99,15>, <44.54,-99,15> }
		triangle { <8,-99,15>, <8,-93,15>, <8,-93,25> }
		triangle { <8,-93,25>, <8,-99,25>, <8,-99,15> }
		triangle { <8,-99,25>, <8,-93,25>, <39.8,-93,25> }
		triangle { <39.8,-93,25>, <39.8,-99,25>, <8,-99,25> }
		triangle { <39.8,-99,25>, <39.8,-93,25>, <33.23,-93,33.23> }
		triangle { <33.23,-93,33.23>, <33.23,-99,33.23>, <39.8,-99,25> }
		triangle { <33.23,-99,33.23>, <33.23,-93,33.23>, <30.215,-93,36> }
		triangle { <30.215,-93,36>, <30.215,-99,36>, <33.23,-99,33.23> }
		triangle { <30.215,-99,36>, <30.215,-93,36>, <5,-93,36> }
		triangle { <5,-93,36>, <5,-99,36>, <30.215,-99,36> }
		triangle { <5,-99,36>, <5,-93,36>, <5,-93,46.733> }
		triangle { <5,-93,46.733>, <5,-99,46.733>, <5,-99,36> }
		triangle { <5,-99,46.733>, <5,-93,46.733>, <0,-93,47> }
		triangle { <0,-93,47>, <0,-99,47>, <5,-99,46.733> }
		triangle { <8,-99,25>, <39.8,-99,25>, <33.23,-99,33.23> }
		triangle { <33.23,-99,33.23>, <30.215,-99,36>, <8,-99,25> }
		triangle { <8,-99,25>, <30.215,-99,36>, <5,-99,36> }
		triangle { <5,-99,36>, <5,-99,46.733>, <0,-99,47> }
		triangle { <46.83,-99,4>, <44.54,-99,15>, <0,-99,15> }
		triangle { <0,-99,15>, <0,-99,4>, <46.83,-99,4> }
		triangle { <8,-99,15>, <8,-99,25>, <0,-99,25> }
		triangle { <0,-99,25>, <0,-99,15>, <8,-99,15> }
		triangle { <0,-99,36>, <0,-99,25>, <8,-99,25> }
		triangle { <8,-99,25>, <5,-99,36>, <0,-99,36> }
		triangle { <0,-99,36>, <5,-99,36>, <0,-99,47> }
		triangle { <8.5,-106,4>, <8.5,-106,0>, <0,-106,0> }
		triangle { <0,-106,0>, <0,-106,4>, <8.5,-106,4> }
		triangle { <33.23,-106,33.23>, <39.8,-106,25>, <8,-106,25> }
		triangle { <8,-106,25>, <30.215,-106,36>, <33.23,-106,33.23> }
		triangle { <5,-106,36>, <30.215,-106,36>, <8,-106,25> }
		triangle { <0,-106,47>, <5,-106,46.733>, <5,-106,36> }
		triangle { <0,-106,15>, <44.54,-106,15>, <46.83,-106,4> }
		triangle { <46.83,-106,4>, <0,-106,4>, <0,-106,15> }
		triangle { <0,-106,25>, <8,-106,25>, <8,-106,15> }
		triangle { <8,-106,15>, <0,-106,15>, <0,-106,25> }
		triangle { <8,-106,25>, <0,-106,25>, <0,-106,36> }
		triangle { <0,-106,36>, <5,-106,36>, <8,-106,25> }
		triangle { <0,-106,47>, <5,-106,36>, <0,-106,36> }
		triangle { <0,-112,0>, <8.5,-112,0>, <8.5,-112,4> }
		triangle { <8.5,-112,4>, <0,-112,4>, <0,-112,0> }
		triangle { <8.5,-112,4>, <8.5,-106,4>, <46.83,-106,4> }
		triangle { <46.83,-106,4>, <46.33,-112,4>, <8.5,-112,4> }
		triangle { <44.014,-112,15>, <44.54,-106,15>, <8,-106,15> }
		triangle { <8,-106,15>, <8,-112,15>, <44.014,-112,15> }
		triangle { <8,-112,15>, <8,-106,15>, <8,-106,25> }
		triangle { <8,-106,25>, <8,-112,25>, <8,-112,15> }
		triangle { <8,-112,25>, <8,-106,25>, <39.8,-106,25> }
		triangle { <39.8,-106,25>, <39.21,-112,25>, <8,-112,25> }
		triangle { <29.43,-112,36>, <30.215,-106,36>, <5,-106,36> }
		triangle { <5,-106,36>, <5,-112,36>, <29.43,-112,36> }
		triangle { <5,-112,36>, <5,-106,36>, <5,-106,46.733> }
		triangle { <5,-106,46.733>, <5,-112,46.23>, <5,-112,36> }
		triangle { <8,-112,25>, <39.21,-112,25>, <32.872,-112,32.872> }
		triangle { <32.872,-112,32.872>, <29.43,-112,36>, <8,-112,25> }
		triangle { <8,-112,25>, <29.43,-112,36>, <5,-112,36> }
		triangle { <5,-112,36>, <5,-112,46.23>, <0,-112,46.5> }
		triangle { <46.33,-112,4>, <44.014,-112,15>, <0,-112,15> }
		triangle { <0,-112,15>, <0,-112,4>, <46.33,-112,4> }
		triangle { <8,-112,15>, <8,-112,25>, <0,-112,25> }
		triangle { <0,-112,25>, <0,-112,15>, <8,-112,15> }
		triangle { <0,-112,36>, <0,-112,25>, <8,-112,25> }
		triangle { <8,-112,25>, <5,-112,36>, <0,-112,36> }
		triangle { <0,-112,36>, <5,-112,36>, <0,-112,46.5> }
		triangle { <8.25,-119,4>, <8.25,-119,0>, <0,-119,0> }
		triangle { <0,-119,0>, <0,-119,4>, <8.25,-119,4> }
		triangle { <32.52,-119,32.52>, <38.61,-119,25>, <8,-119,25> }
		triangle { <8,-119,25>, <28.636,-119,36>, <32.52,-119,32.52> }
		triangle { <5,-119,36>, <28.636,-119,36>, <8,-119,25> }
		triangle { <0,-119,46>, <5,-119,45.73>, <5,-119,36> }
		triangle { <0,-119,15>, <43.486,-119,15>, <45.826,-119,4> }
		triangle { <45.826,-119,4>, <0,-119,4>, <0,-119,15> }
		triangle { <0,-119,25>, <8,-119,25>, <8,-119,15> }
		triangle { <8,-119,15>, <0,-119,15>, <0,-119,25> }
		triangle { <8,-119,25>, <0,-119,25>, <0,-119,36> }
		triangle { <0,-119,36>, <5,-119,36>, <8,-119,25> }
		triangle { <0,-119,46>, <5,-119,36>, <0,-119,36> }
		triangle { <0,-125,0>, <8.25,-125,0>, <8.25,-125,4> }
		triangle { <8.25,-125,4>, <0,-125,4>, <0,-125,0> }
		triangle { <8.25,-125,4>, <8.25,-119,4>, <45.826,-119,4> }
		triangle { <45.826,-119,4>, <44.82,-125,4>, <8.25,-125,4> }
		triangle { <42.426,-125,15>, <43.486,-119,15>, <8,-119,15> }
		triangle { <8,-119,15>, <8,-125,15>, <42.426,-125,15> }
		triangle { <8,-125,15>, <8,-119,15>, <8,-119,25> }
		triangle { <8,-119,25>, <8,-125,25>, <8,-125,15> }
		triangle { <8,-125,25>, <8,-119,25>, <38.61,-119,25> }
		triangle { <38.61,-119,25>, <37.417,-125,25>, <8,-125,25> }
		triangle { <27,-125,36>, <28.636,-119,36>, <5,-119,36> }
		triangle { <5,-119,36>, <5,-125,36>, <27,-125,36> }
		triangle { <5,-125,36>, <5,-119,36>, <5,-119,45.73> }
		triangle { <5,-119,45.73>, <5,-125,44.72>, <5,-125,36> }
		triangle { <8,-125,25>, <37.417,-125,25>, <31.815,-125,31.815> }
		triangle { <31.815,-125,31.815>, <27,-125,36>, <8,-125,25> }
		triangle { <8,-125,25>, <27,-125,36>, <5,-125,36> }
		triangle { <5,-125,36>, <5,-125,44.72>, <0,-125,45> }
		triangle { <44.82,-125,4>, <42.426,-125,15>, <0,-125,15> }
		triangle { <0,-125,15>, <0,-125,4>, <44.82,-125,4> }
		triangle { <8,-125,15>, <8,-125,25>, <0,-125,25> }
		triangle { <0,-125,25>, <0,-125,15>, <8,-125,15> }
		triangle { <0,-125,36>, <0,-125,25>, <8,-125,25> }
		triangle { <8,-125,25>, <5,-125,36>, <0,-125,36> }
		triangle { <0,-125,36>, <5,-125,36>, <0,-125,45> }
		triangle { <8,-132,4>, <8,-132,0>, <0,-132,0> }
		triangle { <0,-132,0>, <0,-132,4>, <8,-132,4> }
		triangle { <31.11,-132,31.11>, <36.21,-132,25>, <8,-132,25> }
		triangle { <8,-132,25>, <25.3,-132,36>, <31.11,-132,31.11> }
		triangle { <5,-132,36>, <25.3,-132,36>, <8,-132,25> }
		triangle { <0,-132,44>, <5,-132,43.715>, <5,-132,36> }
		triangle { <0,-132,15>, <41.36,-132,15>, <43.82,-132,4> }
		triangle { <43.82,-132,4>, <0,-132,4>, <0,-132,15> }
		triangle { <0,-132,25>, <8,-132,25>, <8,-132,15> }
		triangle { <8,-132,15>, <0,-132,15>, <0,-132,25> }
		triangle { <8,-132,25>, <0,-132,25>, <0,-132,36> }
		triangle { <0,-132,36>, <5,-132,36>, <8,-132,25> }
		triangle { <0,-132,44>, <5,-132,36>, <0,-132,36> }
		triangle { <0,-138,0>, <8,-138,0>, <8,-138,4> }
		triangle { <8,-138,4>, <0,-138,4>, <0,-138,0> }
		triangle { <8,-138,4>, <8,-132,4>, <43.82,-132,4> }
		triangle { <43.82,-132,4>, <41.814,-138,4>, <8,-138,4> }
		triangle { <40.299,-138,15>, <41.36,-132,15>, <8,-132,15> }
		triangle { <8,-132,15>, <8,-138,15>, <40.299,-138,15> }
		triangle { <8,-138,15>, <8,-132,15>, <8,-132,25> }
		triangle { <8,-132,25>, <8,-138,25>, <8,-138,15> }
		triangle { <8,-138,25>, <8,-132,25>, <36.21,-132,25> }
		triangle { <36.21,-132,25>, <34.986,-138,25>, <8,-138,25> }
		triangle { <23.516,-138,36>, <25.3,-132,36>, <5,-132,36> }
		triangle { <5,-132,36>, <5,-138,36>, <23.516,-138,36> }
		triangle { <5,-138,36>, <5,-132,36>, <5,-132,43.715> }
		triangle { <5,-132,43.715>, <5,-138,42.71>, <5,-138,36> }
		triangle { <8,-138,25>, <34.986,-138,25>, <30.4,-138,30.4> }
		triangle { <30.4,-138,30.4>, <23.516,-138,36>, <8,-138,25> }
		triangle { <8,-138,25>, <23.516,-138,36>, <5,-138,36> }
		triangle { <5,-138,36>, <5,-138,42.71>, <0,-138,43> }
		triangle { <41.814,-138,4>, <40.299,-138,15>, <0,-138,15> }
		triangle { <0,-138,15>, <0,-138,4>, <41.814,-138,4> }
		triangle { <8,-138,15>, <8,-138,25>, <0,-138,25> }
		triangle { <0,-138,25>, <0,-138,15>, <8,-138,15> }
		triangle { <0,-138,36>, <0,-138,25>, <8,-138,25> }
		triangle { <8,-138,25>, <5,-138,36>, <0,-138,36> }
		triangle { <0,-138,36>, <5,-138,36>, <0,-138,43> }
		triangle { <7.75,-145,4>, <7.75,-145,0>, <0,-145,0> }
		triangle { <0,-145,0>, <0,-145,4>, <7.75,-145,4> }
		triangle { <29.694,-145,29.694>, <33.75,-145,25>, <8,-145,25> }
		triangle { <8,-145,25>, <21.63,-145,36>, <29.694,-145,29.694> }
		triangle { <5,-145,36>, <21.63,-145,36>, <8,-145,25> }
		triangle { <0,-145,42>, <5,-145,41.7>, <5,-145,36> }
		triangle { <0,-145,15>, <39.23,-145,15>, <41.81,-145,4> }
		triangle { <41.81,-145,4>, <0,-145,4>, <0,-145,15> }
		triangle { <0,-145,25>, <8,-145,25>, <8,-145,15> }
		triangle { <8,-145,15>, <0,-145,15>, <0,-145,25> }
		triangle { <8,-145,25>, <0,-145,25>, <0,-145,36> }
		triangle { <0,-145,36>, <5,-145,36>, <8,-145,25> }
		triangle { <0,-145,42>, <5,-145,36>, <0,-145,36> }
		triangle { <0,-151,0>, <7.75,-151,0>, <7.75,-151,4> }
		triangle { <7.75,-151,4>, <0,-151,4>, <0,-151,0> }
		triangle { <7.75,-151,4>, <7.75,-145,4>, <41.81,-145,4> }
		triangle { <41.81,-145,4>, <40.8,-151,4>, <7.75,-151,4> }
		triangle { <38.16,-151,15>, <39.23,-145,15>, <8,-145,15> }
		triangle { <8,-145,15>, <8,-151,15>, <38.16,-151,15> }
		triangle { <8,-151,15>, <8,-145,15>, <8,-145,25> }
		triangle { <8,-145,25>, <8,-151,25>, <8,-151,15> }
		triangle { <8,-151,25>, <8,-145,25>, <33.75,-145,25> }
		triangle { <33.75,-145,25>, <32.5,-151,25>, <8,-151,25> }
		triangle { <19.62,-151,36>, <21.63,-145,36>, <5,-145,36> }
		triangle { <5,-145,36>, <5,-151,36>, <19.62,-151,36> }
		triangle { <5,-151,36>, <5,-145,36>, <5,-145,41.7> }
		triangle { <5,-145,41.7>, <5,-151,40.694>, <5,-151,36> }
		triangle { <8,-151,25>, <32.5,-151,25>, <28.99,-151,28.99> }
		triangle { <28.99,-151,28.99>, <19.62,-151,36>, <8,-151,25> }
		triangle { <8,-151,25>, <19.62,-151,36>, <5,-151,36> }
		triangle { <5,-151,36>, <5,-151,40.694>, <0,-151,41> }
		triangle { <40.8,-151,4>, <38.16,-151,15>, <0,-151,15> }
		triangle { <0,-151,15>, <0,-151,4>, <40.8,-151,4> }
		triangle { <8,-151,15>, <8,-151,25>, <0,-151,25> }
		triangle { <0,-151,25>, <0,-151,15>, <8,-151,15> }
		triangle { <0,-151,36>, <0,-151,25>, <8,-151,25> }
		triangle { <8,-151,25>, <5,-151,36>, <0,-151,36> }
		triangle { <0,-151,36>, <5,-151,36>, <0,-151,41> }
		triangle { <7.5,-158,4>, <7.5,-158,0>, <0,-158,0> }
		triangle { <0,-158,0>, <0,-158,4>, <7.5,-158,4> }
		triangle { <27.93,-158,27.93>, <30.58,-158,25>, <8,-158,25> }
		triangle { <8,-158,25>, <16.256,-158,36>, <27.93,-158,27.93> }
		triangle { <5,-158,36>, <16.256,-158,36>, <8,-158,25> }
		triangle { <0,-158,39.5>, <5,-158,39.18>, <5,-158,36> }
		triangle { <0,-158,15>, <36.54,-158,15>, <39.3,-158,4> }
		triangle { <39.3,-158,4>, <0,-158,4>, <0,-158,15> }
		triangle { <0,-158,25>, <8,-158,25>, <8,-158,15> }
		triangle { <8,-158,15>, <0,-158,15>, <0,-158,25> }
		triangle { <8,-158,25>, <0,-158,25>, <0,-158,36> }
		triangle { <0,-158,36>, <5,-158,36>, <8,-158,25> }
		triangle { <0,-158,39.5>, <5,-158,36>, <0,-158,36> }
		triangle { <0,-164,0>, <7.5,-164,0>, <7.5,-164,4> }
		triangle { <7.5,-164,4>, <0,-164,4>, <0,-164,0> }
		triangle { <7.5,-164,4>, <7.5,-158,4>, <39.3,-158,4> }
		triangle { <39.3,-158,4>, <37.79,-164,4>, <7.5,-164,4> }
		triangle { <34.91,-164,15>, <36.54,-158,15>, <8,-158,15> }
		triangle { <8,-158,15>, <8,-164,15>, <34.91,-164,15> }
		triangle { <8,-164,15>, <8,-158,15>, <8,-158,25> }
		triangle { <8,-158,25>, <8,-164,25>, <8,-164,15> }
		triangle { <8,-164,25>, <8,-158,25>, <30.58,-158,25> }
		triangle { <30.58,-158,25>, <28.62,-164,25>, <8,-164,25> }
		triangle { <12.166,-164,36>, <16.256,-158,36>, <5,-158,36> }
		triangle { <5,-158,36>, <5,-164,36>, <12.166,-164,36> }
		triangle { <5,-164,36>, <5,-158,36>, <5,-158,39.18> }
		triangle { <5,-158,39.18>, <5,-164,37.67>, <5,-164,36> }
		triangle { <8,-164,25>, <28.62,-164,25>, <26.866,-164,26.866> }
		triangle { <26.866,-164,26.866>, <12.166,-164,36>, <8,-164,25> }
		triangle { <8,-164,25>, <12.166,-164,36>, <5,-164,36> }
		triangle { <5,-164,36>, <5,-164,37.67>, <0,-164,38> }
		triangle { <37.79,-164,4>, <34.91,-164,15>, <0,-164,15> }
		triangle { <0,-164,15>, <0,-164,4>, <37.79,-164,4> }
		triangle { <8,-164,15>, <8,-164,25>, <0,-164,25> }
		triangle { <0,-164,25>, <0,-164,15>, <8,-164,15> }
		triangle { <0,-164,36>, <0,-164,25>, <8,-164,25> }
		triangle { <8,-164,25>, <5,-164,36>, <0,-164,36> }
		triangle { <0,-164,36>, <5,-164,36>, <0,-164,38> }
		triangle { <7.25,-171,4>, <7.25,-171,0>, <0,-171,0> }
		triangle { <0,-171,0>, <0,-171,4>, <7.25,-171,4> }
		triangle { <13.969,-171,33.722>, <26.594,-171,25>, <8,-171,25> }
		triangle { <8,-171,25>, <0,-171,36.5>, <13.969,-171,33.722> }
		triangle { <0,-171,15>, <33.275,-171,15>, <36.28,-171,4> }
		triangle { <36.28,-171,4>, <0,-171,4>, <0,-171,15> }
		triangle { <0,-171,25>, <8,-171,25>, <8,-171,15> }
		triangle { <8,-171,15>, <0,-171,15>, <0,-171,25> }
		triangle { <8,-171,25>, <0,-171,25>, <0,-171,36.5> }
		triangle { <0,-177,0>, <7.25,-177,0>, <7.25,-177,4> }
		triangle { <7.25,-177,4>, <0,-177,4>, <0,-177,0> }
		triangle { <7.25,-177,4>, <7.25,-171,4>, <36.28,-171,4> }
		triangle { <36.28,-171,4>, <34.77,-177,4>, <7.25,-177,4> }
		triangle { <31.62,-177,15>, <33.275,-171,15>, <8,-171,15> }
		triangle { <8,-171,15>, <8,-177,15>, <31.62,-177,15> }
		triangle { <8,-177,15>, <8,-171,15>, <8,-171,25> }
		triangle { <8,-171,25>, <8,-177,25>, <8,-177,15> }
		triangle { <8,-177,25>, <8,-171,25>, <26.594,-171,25> }
		triangle { <26.594,-171,25>, <24.495,-177,25>, <8,-177,25> }
		triangle { <8,-177,25>, <24.495,-177,25>, <13.395,-177,32.337> }
		triangle { <13.395,-177,32.337>, <0,-177,35>, <8,-177,25> }
		triangle { <34.77,-177,4>, <31.62,-177,15>, <0,-177,15> }
		triangle { <0,-177,15>, <0,-177,4>, <34.77,-177,4> }
		triangle { <8,-177,15>, <8,-177,25>, <0,-177,25> }
		triangle { <0,-177,25>, <0,-177,15>, <8,-177,15> }
		triangle { <0,-177,35>, <0,-177,25>, <8,-177,25> }
		triangle { <7,-184,4>, <7,-184,0>, <0,-184,0> }
		triangle { <0,-184,0>, <0,-184,4>, <7,-184,4> }
		triangle { <12.82,-184,30.95>, <22.3,-184,25>, <8,-184,25> }
		triangle { <8,-184,25>, <0,-184,33.5>, <12.82,-184,30.95> }
		triangle { <0,-184,15>, <29.954,-184,15>, <33.26,-184,4> }
		triangle { <33.26,-184,4>, <0,-184,4>, <0,-184,15> }
		triangle { <0,-184,25>, <8,-184,25>, <8,-184,15> }
		triangle { <8,-184,15>, <0,-184,15>, <0,-184,25> }
		triangle { <8,-184,25>, <0,-184,25>, <0,-184,33.5> }
		triangle { <0,-190,0>, <7,-190,0>, <7,-190,4> }
		triangle { <7,-190,4>, <0,-190,4>, <0,-190,0> }
		triangle { <7,-190,4>, <7,-184,4>, <33.26,-184,4> }
		triangle { <33.26,-184,4>, <31.75,-190,4>, <7,-190,4> }
		triangle { <28.267,-190,15>, <29.954,-184,15>, <8,-184,15> }
		triangle { <8,-184,15>, <8,-190,15>, <28.267,-190,15> }
		triangle { <8,-190,15>, <8,-184,15>, <8,-184,25> }
		triangle { <8,-184,25>, <8,-190,25>, <8,-190,15> }
		triangle { <8,-190,25>, <8,-184,25>, <22.3,-184,25> }
		triangle { <22.3,-184,25>, <19.975,-190,25>, <8,-190,25> }
		triangle { <8,-190,25>, <19.975,-190,25>, <12.246,-190,29.565> }
		triangle { <12.246,-190,29.565>, <0,-190,32>, <8,-190,25> }
		triangle { <31.75,-190,4>, <28.267,-190,15>, <0,-190,15> }
		triangle { <0,-190,15>, <0,-190,4>, <31.75,-190,4> }
		triangle { <8,-190,15>, <8,-190,25>, <0,-190,25> }
		triangle { <0,-190,25>, <0,-190,15>, <8,-190,15> }
		triangle { <0,-190,32>, <0,-190,25>, <8,-190,25> }
		triangle { <6.75,-197,4>, <6.75,-197,0>, <0,-197,0> }
		triangle { <0,-197,0>, <0,-197,4>, <6.75,-197,4> }
		triangle { <11.48,-197,27.717>, <16.583,-197,25>, <8,-197,25> }
		triangle { <8,-197,25>, <0,-197,30>, <11.48,-197,27.717> }
		triangle { <0,-197,15>, <25.98,-197,15>, <29.73,-197,4> }
		triangle { <29.73,-197,4>, <0,-197,4>, <0,-197,15> }
		triangle { <0,-197,25>, <8,-197,25>, <8,-197,15> }
		triangle { <8,-197,15>, <0,-197,15>, <0,-197,25> }
		triangle { <8,-197,25>, <0,-197,25>, <0,-197,30> }
		triangle { <0,-203,0>, <6.75,-203,0>, <6.75,-203,4> }
		triangle { <6.75,-203,4>, <0,-203,4>, <0,-203,0> }
		triangle { <6.75,-203,4>, <6.75,-197,4>, <29.73,-197,4> }
		triangle { <29.73,-197,4>, <27.713,-203,4>, <6.75,-203,4> }
		triangle { <23.643,-203,15>, <25.98,-197,15>, <8,-197,15> }
		triangle { <8,-197,15>, <8,-203,15>, <23.643,-203,15> }
		triangle { <8,-203,15>, <8,-197,15>, <8,-197,25> }
		triangle { <8,-197,25>, <8,-203,25>, <8,-203,15> }
		triangle { <8,-203,25>, <8,-197,25>, <16.583,-197,25> }
		triangle { <16.583,-197,25>, <12.61,-203,25>, <8,-203,25> }
		triangle { <8,-203,25>, <12.61,-203,25>, <10.716,-203,25.97> }
		triangle { <10.716,-203,25.97>, <0,-203,28>, <8,-203,25> }
		triangle { <27.713,-203,4>, <23.643,-203,15>, <0,-203,15> }
		triangle { <0,-203,15>, <0,-203,4>, <27.713,-203,4> }
		triangle { <8,-203,15>, <8,-203,25>, <0,-203,25> }
		triangle { <0,-203,25>, <0,-203,15>, <8,-203,15> }
		triangle { <0,-203,28>, <0,-203,25>, <8,-203,25> }
		triangle { <6.5,-210,4>, <6.5,-210,0>, <0,-210,0> }
		triangle { <0,-210,0>, <0,-210,4>, <6.5,-210,4> }
		triangle { <0,-210,15>, <21.237,-210,15>, <25.69,-210,4> }
		triangle { <25.69,-210,4>, <0,-210,4>, <0,-210,15> }
		triangle { <0,-210,26>, <5,-210,25.515>, <5,-210,15> }
		triangle { <5,-210,15>, <0,-210,15>, <0,-210,26> }
		triangle { <0,-216,0>, <6.5,-216,0>, <6.5,-216,4> }
		triangle { <6.5,-216,4>, <0,-216,4>, <0,-216,0> }
		triangle { <6.5,-216,4>, <6.5,-210,4>, <25.69,-210,4> }
		triangle { <25.69,-210,4>, <23.664,-216,4>, <6.5,-216,4> }
		triangle { <18.735,-216,15>, <21.237,-210,15>, <5,-210,15> }
		triangle { <5,-210,15>, <5,-216,15>, <18.735,-216,15> }
		triangle { <5,-216,15>, <5,-210,15>, <5,-210,25.515> }
		triangle { <5,-210,25.515>, <5,-216,23.474>, <5,-216,15> }
		triangle { <23.664,-216,4>, <18.735,-216,15>, <0,-216,15> }
		triangle { <0,-216,15>, <0,-216,4>, <23.664,-216,4> }
		triangle { <5,-216,15>, <5,-216,23.474>, <0,-216,24> }
		triangle { <0,-216,24>, <0,-216,15>, <5,-216,15> }
		triangle { <6.25,-223,4>, <6.25,-223,0>, <0,-223,0> }
		triangle { <0,-223,0>, <0,-223,4>, <6.25,-223,4> }
		triangle { <0,-223,15>, <16.093,-223,15>, <21.633,-223,4> }
		triangle { <21.633,-223,4>, <0,-223,4>, <0,-223,15> }
		triangle { <0,-223,22>, <5,-223,21.424>, <5,-223,15> }
		triangle { <5,-223,15>, <0,-223,15>, <0,-223,22> }
		triangle { <0,-229,0>, <6.25,-229,0>, <6.25,-229,4> }
		triangle { <6.25,-229,4>, <0,-229,4>, <0,-229,0> }
		triangle { <6.25,-229,4>, <6.25,-223,4>, <21.633,-223,4> }
		triangle { <21.633,-223,4>, <19.596,-229,4>, <6.25,-229,4> }
		triangle { <13.229,-229,15>, <16.093,-223,15>, <5,-223,15> }
		triangle { <5,-223,15>, <5,-229,15>, <13.229,-229,15> }
		triangle { <5,-229,15>, <5,-223,15>, <5,-223,21.424> }
		triangle { <5,-223,21.424>, <5,-229,19.365>, <5,-229,15> }
		triangle { <19.596,-229,4>, <13.229,-229,15>, <0,-229,15> }
		triangle { <0,-229,15>, <0,-229,4>, <19.596,-229,4> }
		triangle { <5,-229,15>, <5,-229,19.365>, <0,-229,20> }
		triangle { <0,-229,20>, <0,-229,15>, <5,-229,15> }
		triangle { <6,-236,4>, <6,-236,0>, <0,-236,0> }
		triangle { <0,-236,0>, <0,-236,4>, <6,-236,4> }
		triangle { <0,-236,6.889>, <16.63,-236,6.889>, <17.55,-236,4> }
		triangle { <17.55,-236,4>, <0,-236,4>, <0,-236,6.889> }
		triangle { <0,-236,12.728>, <12.728,-236,12.728>, <16.63,-236,6.889> }
		triangle { <16.63,-236,6.889>, <0,-236,6.889>, <0,-236,12.728> }
		triangle { <0,-236,18>, <6.889,-236,16.63>, <12.728,-236,12.728> }
		triangle { <12.728,-236,12.728>, <0,-236,12.728>, <0,-236,18> }
		triangle { <0,-242,0>, <6,-242,0>, <6,-242,4> }
		triangle { <6,-242,4>, <0,-242,4>, <0,-242,0> }
		triangle { <6,-242,4>, <6,-236,4>, <17.55,-236,4> }
		triangle { <17.55,-236,4>, <15.492,-242,4>, <6,-242,4> }
		triangle { <15.492,-242,4>, <14.78,-242,6.123>, <0,-242,6.123> }
		triangle { <0,-242,6.123>, <0,-242,4>, <15.492,-242,4> }
		triangle { <14.78,-242,6.123>, <11.314,-242,11.314>, <0,-242,11.314> }
		triangle { <0,-242,11.314>, <0,-242,6.123>, <14.78,-242,6.123> }
		triangle { <11.314,-242,11.314>, <6.123,-242,14.78>, <0,-242,16> }
		triangle { <0,-242,16>, <0,-242,11.314>, <11.314,-242,11.314> }
		triangle { <6,-249,4>, <6,-249,0>, <0,-249,0> }
		triangle { <0,-249,0>, <0,-249,4>, <6,-249,4> }
		triangle { <0,-249,4.975>, <12.01,-249,4.975>, <12.369,-249,4> }
		triangle { <12.369,-249,4>, <0,-249,4>, <0,-249,4.975> }
		triangle { <0,-249,9.192>, <9.192,-249,9.192>, <12.01,-249,4.975> }
		triangle { <12.01,-249,4.975>, <0,-249,4.975>, <0,-249,9.192> }
		triangle { <0,-249,13>, <4.975,-249,12.01>, <9.192,-249,9.192> }
		triangle { <9.192,-249,9.192>, <0,-249,9.192>, <0,-249,13> }
		triangle { <0,-255,0>, <6,-255,0>, <6,-255,4> }
		triangle { <6,-255,4>, <0,-255,4>, <0,-255,0> }
		triangle { <12.369,-249,4>, <9.165,-255,4>, <6,-255,4> }
		triangle { <6,-255,4>, <6,-249,4>, <12.369,-249,4> }
		triangle { <9.165,-255,4>, <12.369,-249,4>, <12.01,-249,4.975> }
		triangle { <16.6302,-34,6.8886>, <10,-30.2,4>, <7.61547,-30.2,7.61547> }
		triangle { <16.6302,-34,6.8886>, <7.61547,-30.2,7.61547>, <12.7278,-34,12.7278> }
		triangle { <12.7278,-34,12.7278>, <7.61547,-30.2,7.61547>, <4.12168,-30.2,9.9504> }
		triangle { <12.7278,-34,12.7278>, <4.12168,-30.2,9.9504>, <6.8886,-34,16.6302> }
		triangle { <6.8886,-34,16.6302>, <4.12168,-30.2,9.9504>, <0,-30.2,10.77> }
		triangle { <6.8886,-34,16.6302>, <0,-30.2,10.77>, <0,-34,18> }
		triangle { <10,-30.2,0>, <6,-28,0>, <10,-30.2,4> }
		triangle { <6,-28,0>, <5.5434,-28,2.2962>, <10,-30.2,4> }
		triangle { <10,-30.2,4>, <5.5434,-28,2.2962>, <7.61547,-30.2,7.61547> }
		triangle { <5.5434,-28,2.2962>, <4.2426,-28,4.2426>, <7.61547,-30.2,7.61547> }
		triangle { <7.61547,-30.2,7.61547>, <4.2426,-28,4.2426>, <2.2962,-28,5.5434> }
		triangle { <7.61547,-30.2,7.61547>, <2.2962,-28,5.5434>, <4.12168,-30.2,9.9504> }
		triangle { <4.12168,-30.2,9.9504>, <2.2962,-28,5.5434>, <0,-28,6> }
		triangle { <4.12168,-30.2,9.9504>, <0,-28,6>, <0,-30.2,10.77> }
		triangle { <0,-41,27>, <0,-47,32>, <10.2,-41,25> }
		triangle { <0,-47,32>, <12.2464,-47,29.5648>, <10.2,-41,25> }
		triangle { <28.27,-47,15>, <31.75,-47,4>, <26.7,-41,4> }
		triangle { <28.27,-47,15>, <26.7,-41,4>, <22.45,-41,15> }
		triangle { <35.78,-54,4>, <32.73,-54,15>, <37.08,-60,15> }
		triangle { <35.78,-54,4>, <37.08,-60,15>, <39.8,-60,4> }
		triangle { <25.9,-54,25>, <16,-54,32.24>, <17.44,-60,36> }
		triangle { <25.9,-54,25>, <17.44,-60,36>, <31.22,-60,25> }
		triangle { <5,-54,35.65>, <0,-54,36>, <5,-60,39.69> }
		triangle { <0,-54,36>, <0,-60,40>, <5,-60,39.69> }
		triangle { <43.82,-73,4>, <41.81,-67,4>, <41.36,-73,15> }
		triangle { <41.81,-67,4>, <39.23,-67,15>, <41.36,-73,15> }
		triangle { <36.21,-73,25>, <33.75,-67,25>, <31.11,-73,31.11> }
		triangle { <33.75,-67,25>, <29.694,-67,29.694>, <31.11,-73,31.11> }
		triangle { <31.11,-73,31.11>, <29.694,-67,29.694>, <25.3,-73,36> }
		triangle { <29.694,-67,29.694>, <21.63,-67,36>, <25.3,-73,36> }
		triangle { <5,-73,43.715>, <5,-67,41.7>, <0,-67,42> }
		triangle { <5,-73,43.715>, <0,-67,42>, <0,-73,44> }
		triangle { <46.83,-86,4>, <45.826,-80,4>, <44.54,-86,15> }
		triangle { <45.826,-80,4>, <43.486,-80,15>, <44.54,-86,15> }
		triangle { <39.8,-86,25>, <38.61,-80,25>, <33.23,-86,33.23> }
		triangle { <38.61,-80,25>, <32.52,-80,32.52>, <33.23,-86,33.23> }
		triangle { <33.23,-86,33.23>, <32.52,-80,32.52>, <30.215,-86,36> }
		triangle { <32.52,-80,32.52>, <28.636,-80,36>, <30.215,-86,36> }
		triangle { <5,-86,46.733>, <5,-80,45.73>, <0,-80,46> }
		triangle { <5,-86,46.733>, <0,-80,46>, <0,-86,47> }
		triangle { <46.33,-112,4>, <46.83,-106,4>, <44.54,-106,15> }
		triangle { <46.33,-112,4>, <44.54,-106,15>, <44.014,-112,15> }
		triangle { <39.21,-112,25>, <39.8,-106,25>, <33.23,-106,33.23> }
		triangle { <39.21,-112,25>, <33.23,-106,33.23>, <32.872,-112,32.872> }
		triangle { <32.872,-112,32.872>, <33.23,-106,33.23>, <30.215,-106,36> }
		triangle { <32.872,-112,32.872>, <30.215,-106,36>, <29.43,-112,36> }
		triangle { <5,-112,46.23>, <5,-106,46.733>, <0,-112,46.5> }
		triangle { <5,-106,46.733>, <0,-106,47>, <0,-112,46.5> }
		triangle { <44.82,-125,4>, <45.826,-119,4>, <43.486,-119,15> }
		triangle { <44.82,-125,4>, <43.486,-119,15>, <42.426,-125,15> }
		triangle { <37.417,-125,25>, <38.61,-119,25>, <32.52,-119,32.52> }
		triangle { <37.417,-125,25>, <32.52,-119,32.52>, <31.815,-125,31.815> }
		triangle { <31.815,-125,31.815>, <32.52,-119,32.52>, <28.636,-119,36> }
		triangle { <31.815,-125,31.815>, <28.636,-119,36>, <27,-125,36> }
		triangle { <5,-125,44.72>, <5,-119,45.73>, <0,-125,45> }
		triangle { <5,-119,45.73>, <0,-119,46>, <0,-125,45> }
		triangle { <41.814,-138,4>, <43.82,-132,4>, <40.299,-138,15> }
		triangle { <43.82,-132,4>, <41.36,-132,15>, <40.299,-138,15> }
		triangle { <34.986,-138,25>, <36.21,-132,25>, <31.11,-132,31.11> }
		triangle { <34.986,-138,25>, <31.11,-132,31.11>, <30.4,-138,30.4> }
		triangle { <30.4,-138,30.4>, <31.11,-132,31.11>, <25.3,-132,36> }
		triangle { <30.4,-138,30.4>, <25.3,-132,36>, <23.516,-138,36> }
		triangle { <5,-138,42.71>, <5,-132,43.715>, <0,-138,43> }
		triangle { <5,-132,43.715>, <0,-132,44>, <0,-138,43> }
		triangle { <40.8,-151,4>, <41.81,-145,4>, <39.23,-145,15> }
		triangle { <40.8,-151,4>, <39.23,-145,15>, <38.16,-151,15> }
		triangle { <32.5,-151,25>, <33.75,-145,25>, <29.694,-145,29.694> }
		triangle { <32.5,-151,25>, <29.694,-145,29.694>, <28.99,-151,28.99> }
		triangle { <28.99,-151,28.99>, <29.694,-145,29.694>, <21.63,-145,36> }
		triangle { <28.99,-151,28.99>, <21.63,-145,36>, <19.62,-151,36> }
		triangle { <5,-151,40.694>, <5,-145,41.7>, <0,-151,41> }
		triangle { <5,-145,41.7>, <0,-145,42>, <0,-151,41> }
		triangle { <37.79,-164,4>, <39.3,-158,4>, <36.54,-158,15> }
		triangle { <37.79,-164,4>, <36.54,-158,15>, <34.91,-164,15> }
		triangle { <28.62,-164,25>, <30.58,-158,25>, <27.93,-158,27.93> }
		triangle { <28.62,-164,25>, <27.93,-158,27.93>, <26.866,-164,26.866> }
		triangle { <26.866,-164,26.866>, <27.93,-158,27.93>, <16.256,-158,36> }
		triangle { <26.866,-164,26.866>, <16.256,-158,36>, <12.166,-164,36> }
		triangle { <5,-164,37.67>, <5,-158,39.18>, <0,-164,38> }
		triangle { <5,-158,39.18>, <0,-158,39.5>, <0,-164,38> }
		triangle { <34.77,-177,4>, <36.28,-171,4>, <33.275,-171,15> }
		triangle { <34.77,-177,4>, <33.275,-171,15>, <31.62,-177,15> }
		triangle { <24.495,-177,25>, <26.594,-171,25>, <13.969,-171,33.722> }
		triangle { <24.495,-177,25>, <13.969,-171,33.722>, <13.395,-177,32.337> }
		triangle { <13.395,-177,32.337>, <13.969,-171,33.722>, <0,-171,36.5> }
		triangle { <13.395,-177,32.337>, <0,-171,36.5>, <0,-177,35> }
		triangle { <31.75,-190,4>, <33.26,-184,4>, <29.954,-184,15> }
		triangle { <31.75,-190,4>, <29.954,-184,15>, <28.267,-190,15> }
		triangle { <19.975,-190,25>, <22.3,-184,25>, <12.82,-184,30.95> }
		triangle { <19.975,-190,25>, <12.82,-184,30.95>, <12.246,-190,29.565> }
		triangle { <12.246,-190,29.565>, <12.82,-184,30.95>, <0,-184,33.5> }
		triangle { <12.246,-190,29.565>, <0,-184,33.5>, <0,-190,32> }
		triangle { <27.713,-203,4>, <29.73,-197,4>, <25.98,-197,15> }
		triangle { <27.713,-203,4>, <25.98,-197,15>, <23.643,-203,15> }
		triangle { <12.61,-203,25>, <16.583,-197,25>, <11.48,-197,27.717> }
		triangle { <12.61,-203,25>, <11.48,-197,27.717>, <10.716,-203,25.97> }
		triangle { <10.716,-203,25.97>, <11.48,-197,27.717>, <0,-197,30> }
		triangle { <10.716,-203,25.97>, <0,-197,30>, <0,-203,28> }
		triangle { <23.664,-216,4>, <25.69,-210,4>, <21.237,-210,15> }
		triangle { <23.664,-216,4>, <21.237,-210,15>, <18.735,-216,15> }
		triangle { <5,-216,23.474>, <5,-210,25.515>, <0,-216,24> }
		triangle { <5,-210,25.515>, <0,-210,26>, <0,-216,24> }
		triangle { <19.596,-229,4>, <21.633,-223,4>, <16.093,-223,15> }
		triangle { <19.596,-229,4>, <16.093,-223,15>, <13.229,-229,15> }
		triangle { <5,-229,19.365>, <5,-223,21.424>, <0,-229,20> }
		triangle { <5,-223,21.424>, <0,-223,22>, <0,-229,20> }
		triangle { <15.492,-242,4>, <17.55,-236,4>, <16.63,-236,6.889> }
		triangle { <15.492,-242,4>, <16.63,-236,6.889>, <14.78,-242,6.123> }
		triangle { <14.78,-242,6.123>, <16.63,-236,6.889>, <11.314,-242,11.314> }
		triangle { <16.63,-236,6.889>, <12.728,-236,12.728>, <11.314,-242,11.314> }
		triangle { <11.314,-242,11.314>, <12.728,-236,12.728>, <6.889,-236,16.63> }
		triangle { <11.314,-242,11.314>, <6.889,-236,16.63>, <6.123,-242,14.78> }
		triangle { <6.123,-242,14.78>, <6.889,-236,16.63>, <0,-242,16> }
		triangle { <6.889,-236,16.63>, <0,-236,18>, <0,-242,16> }
		triangle { <9.239,-255,3.827>, <12.01,-249,4.975>, <9.192,-249,9.192> }
		triangle { <9.239,-255,3.827>, <9.192,-249,9.192>, <7.071,-255,7.071> }
		triangle { <7.071,-255,7.071>, <9.192,-249,9.192>, <4.975,-249,12.01> }
		triangle { <7.071,-255,7.071>, <4.975,-249,12.01>, <3.827,-255,9.239> }
		triangle { <3.827,-255,9.239>, <4.975,-249,12.01>, <0,-249,13> }
		triangle { <3.827,-255,9.239>, <0,-249,13>, <0,-255,10> }
		triangle { <9.165,-255,4>, <9.239,-255,3.827>, <0,-255,3.827> }
		triangle { <0,-255,3.827>, <0,-255,4>, <9.165,-255,4> }
		triangle { <9.239,-255,3.827>, <7.071,-255,7.071>, <0,-255,7.071> }
		triangle { <0,-255,7.071>, <0,-255,3.827>, <9.239,-255,3.827> }
		triangle { <7.071,-255,7.071>, <3.827,-255,9.239>, <0,-255,10> }
		triangle { <0,-255,10>, <0,-255,7.071>, <7.071,-255,7.071> }
	}
}
#end
#end // ifndef (s_slash_688s01_dot_dat)


//// Primitive stud4.dat
#ifndef (stud4_dot_dat)
#declare stud4_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4_dot_dat)


//// Primitive 4-4ring5.dat
#ifndef (_4_dash_4ring5_dot_dat)
#declare _4_dash_4ring5_dot_dat = disc { <0,0,0>, <0,1,0>, 6, 5 }
#end // ifndef (_4_dash_4ring5_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive t04o2000.dat
#ifndef (t04o2000_dot_dat)
#declare t04o2000_dot_dat = torus {
	1, 2000/9999
	clipped_by {
		difference {
			box { <0,0,0>, <2,1,2> }
			cylinder { <0,0,0>, <0,1,0>, 1 open }
		}
	}
}
#end // ifndef (t04o2000_dot_dat)


//// Primitive ring1.dat
#ifndef (ring1_dot_dat)
#declare ring1_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 }
#end // ifndef (ring1_dot_dat)


//// Primitive 1-4ring9.dat
#ifndef (_1_dash_4ring9_dot_dat)
#declare _1_dash_4ring9_dot_dat = disc {
	<0,0,0>, <0,1,0>, 10, 9
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring9_dot_dat)


//// Primitive t04i3333.dat
#ifndef (t04i3333_dot_dat)
#declare t04i3333_dot_dat = torus {
	1, 3333/9999
	clipped_by {
		box { <0,0,0>, <2,1,2> }
		cylinder { <0,0,0>, <0,1,0>, 1 open }
	}
}
#end // ifndef (t04i3333_dot_dat)


//// Primitive 4-8sphe.dat
#ifndef (_4_dash_8sphe_dot_dat)
#declare _4_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <-1,0,-1>, <2,2,2> } } }
#end // ifndef (_4_dash_8sphe_dot_dat)


//// Primitive rect.dat
#ifndef (rect_dot_dat)
#declare rect_dot_dat = object {
// Rectangle
// Name: rect.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-05 [hafhead] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect_dot_dat)


//// Part 688.dat
#ifndef (_688_dot_dat)
#declare _688_dot_dat = #if (L3Quality = 0) box { <-46.83,-272,-47>, <46.83,8,47> } #else union {
// Plant Tree Cedar  4 x  4 x 11 & 1/2
// Name: 688.dat
// Author: Tore Eriksson [simlego]
// !LDRAW_ORG Part UPDATE 2004-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CMDLINE -c2
// !HISTORY 2004-01-01 [cma_1971] Secondary author
// !HISTORY 2004-03-23 [westrate] Quartered, fixed non-coplanar quads, BFC'ed
// !HISTORY 2004-09-15 [PTadmin] Official Update 2004-03
// !HISTORY 2007-07-18 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	object { s_slash_688s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_688s01_dot_dat matrix <-1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_688s01_dot_dat matrix <1,0,0,0,1,0,0,0,-1,0,0,0> }
	object { s_slash_688s01_dot_dat matrix <-1,0,0,0,1,0,0,0,-1,0,0,0> }
	#if (L3Studs)
		object { stud4_dot_dat matrix <1,0,0,0,-1,0,0,0,-1,0,4,0> }
	#end
	object { _4_dash_4ring5_dot_dat matrix <4,0,0,0,-1,0,0,0,4,0,8,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <20,0,0,0,4,0,0,0,20,0,4,0> }
	object { _4_dash_4cyli_dot_dat matrix <24,0,0,0,4,0,0,0,24,0,4,0> }
	object { _4_dash_4disc_dot_dat matrix <20,0,0,0,-1,0,0,0,20,0,4,0> }
	object { t04o2000_dot_dat matrix <20,0,0,0,-20,0,0,0,20,0,4,0> }
	object { t04o2000_dot_dat matrix <20,0,0,0,-20,0,0,0,-20,0,4,0> }
	object { t04o2000_dot_dat matrix <-20,0,0,0,-20,0,0,0,-20,0,4,0> }
	object { t04o2000_dot_dat matrix <-20,0,0,0,-20,0,0,0,20,0,4,0> }
// 1 16 0 0 0 20 0 0 0 1 0 0 0 20 4-4disc.dat
	object { ring1_dot_dat matrix <10,0,0,0,1,0,0,0,10,0,0,0> }
	object { _1_dash_4ring9_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _1_dash_4ring9_dot_dat matrix <0,0,1,0,1,0,-1,0,0,0,0,0> }
	object { _1_dash_4ring9_dot_dat matrix <-1,0,0,0,1,0,0,0,-1,0,0,0> }
	object { _1_dash_4ring9_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,0,0> }
// BFC INVERTNEXT
	object { t04i3333_dot_dat matrix <9,0,0,0,9,0,0,0,9,0,-3,0> }
// BFC INVERTNEXT
	object { t04i3333_dot_dat matrix <0,0,-9,0,9,0,9,0,0,0,-3,0> }
// BFC INVERTNEXT
	object { t04i3333_dot_dat matrix <-9,0,0,0,9,0,0,0,-9,0,-3,0> }
// BFC INVERTNEXT
	object { t04i3333_dot_dat matrix <0,0,9,0,9,0,-9,0,0,0,-3,0> }
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,25,0,0,0,6,0,-28,0> }
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,7,0,0,0,6,0,-41,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-54,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-67,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-80,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-93,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-106,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-119,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-132,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-145,0> }
	object { _4_dash_4cyli_dot_dat matrix <5.5,0,0,0,7,0,0,0,5.5,0,-158,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,7,0,0,0,5,0,-171,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,7,0,0,0,5,0,-184,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,7,0,0,0,5,0,-197,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,7,0,0,0,5,0,-210,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,7,0,0,0,5,0,-223,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,7,0,0,0,5,0,-236,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,7,0,0,0,5,0,-249,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,8,0,0,0,5,0,-263,0> }
	object { _4_dash_4ring5_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,-263,0> }
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,6,0,0,0,6,0,-269,0> }
	object { _4_dash_8sphe_dot_dat matrix <6,0,0,0,-3,0,0,0,6,0,-269,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-9.75,-44,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,9.75,-44,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-9.5,-57,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,9.5,-57,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-9.25,-70,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,9.25,-70,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-9,-83,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,9,-83,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-8.75,-96,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,8.75,-96,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-8.5,-109,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,8.5,-109,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-8.25,-122,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,8.25,-122,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-8,-135,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,8,-135,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-7.75,-148,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,7.75,-148,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-7.5,-161,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,7.5,-161,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-7.25,-174,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,7.25,-174,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-7,-187,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,7,-187,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-6.75,-200,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,6.75,-200,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-6.5,-213,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,6.5,-213,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-6.25,-226,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,6.25,-226,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-6,-239,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,6,-239,0> }
	object { rect_dot_dat matrix <0,3,0,1,0,0,0,0,4,-6,-252,0> }
	object { rect_dot_dat matrix <0,3,0,-1,0,0,0,0,4,6,-252,0> }
}
#end
#end // ifndef (_688_dot_dat)


//// Model tree_smallgroup_rand.ldr
#ifndef (tree__smallgroup__rand_dot_ldr)
#declare tree__smallgroup__rand_dot_ldr = union {
// Untitled
// Name: tree_smallgroup_rand.ldr
// Author: Michael Horvath
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 2  -10 -8 0  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,-10,-8,0>
		material { L3Color2 }
	}
	// 1 2  -280 -8 30  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,-280,-8,30>
		material { L3Color2 }
	}
	// 1 2  250 -8 40  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,250,-8,40>
		material { L3Color2 }
	}
	// 1 2  0 -8 -280  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-8,-280>
		material { L3Color2 }
	}
	// 1 2  -50 -8 260  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,-50,-8,260>
		material { L3Color2 }
	}
	// 1 2  150 -8 140  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,150,-8,140>
		material { L3Color2 }
	}
	// 1 2  140 -8 -60  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,140,-8,-60>
		material { L3Color2 }
	}
	// 1 2  20 -8 130  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,20,-8,130>
		material { L3Color2 }
	}
	// 1 2  -130 -8 120  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,-130,-8,120>
		material { L3Color2 }
	}
	// 1 2  -170 -8 -50  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,-170,-8,-50>
		material { L3Color2 }
	}
	// 1 2  0 -8 -130  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-8,-130>
		material { L3Color2 }
	}
	// 1 2  -130 -8 -190  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,-130,-8,-190>
		material { L3Color2 }
	}
	// 1 2  130 -8 -180  1 0 0  0 1 0  0 0 1 688.dat
	object {
		_688_dot_dat
		matrix <1-L3SW/93.66,0,0,0,1-L3SW/280,0,0,0,1-L3SW/94,0,L3SW/-2.12121,0>
		matrix <1,0,0,0,1,0,0,0,1,130,-8,-180>
		material { L3Color2 }
	}
}
#end // ifndef (tree__smallgroup__rand_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-326.83,-280,-327>;
#declare L3ModelBBoxMax = <296.83,0,307>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <-15,-140,-10>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <623.66,280,634>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject tree_smallgroup_rand.ldr
object { tree__smallgroup__rand_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            11            14
// POV Equivs:       -             9 (82%)
// Model has 13 parts (13 studs)

//// End
