// Generated by L3P v1.4 BETA 20080930 (Win32)  (C) 1998-2008 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Tue Dec 27 20:18:22 2011
// Input file:   W:\JA2\mecha\povray\road_corner.ldr
// Title:        Baseplate 32 x 32 Road 7-Stud Curve with Road Pattern
// Author:       Steve Bliss [sbliss]
// ModelDir:     W:\JA2\mecha\povray
// WorkDir:      W:\JA2\mecha\povray
// LDRAWDIR:     D:\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   W:\JA2\mecha\povray\ (0x10)
// SearchDir2:   D:\LDraw\P\ (0x9)
// SearchDir3:   D:\LDraw\PARTS\ (0x4)
// SearchDir4:   D:\LDraw\MODELS\ (0x0)
// ldconfig.ldr: D:\LDraw\ldconfig.ldr
// Commandline:  "C:\Programs Windows\l3p14beta\l3p.exe" W:\JA2\mecha\povray\road_corner.ldr -o -ic -il -ibmecha.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "mecha.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(156,153,153)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 15 White (from ldconfig.ldr)
#ifndef (L3Texture15)
#declare L3Texture15 = L3TextureOpaqueRGB(255,255,255)
#end
#ifndef (L3Texture15_slope)
#declare L3Texture15_slope = L3TextureSlope(L3Texture15)
#end
#ifndef (L3Color15)
#declare L3Color15 = L3Material(L3Texture15)
#end
#ifndef (L3Color15_slope)
#declare L3Color15_slope = L3Material(L3Texture15_slope)
#end


//// Color 2 Green (from ldconfig.ldr)
#ifndef (L3Texture2)
#declare L3Texture2 = L3TextureOpaqueRGB(0,140,20)
#end
#ifndef (L3Texture2_slope)
#declare L3Texture2_slope = L3TextureSlope(L3Texture2)
#end
#ifndef (L3Color2)
#declare L3Color2 = L3Material(L3Texture2)
#end
#ifndef (L3Color2_slope)
#declare L3Color2_slope = L3Material(L3Texture2_slope)
#end


//// Primitive 48\1-4rin71.dat
#ifndef (_48_slash_1_dash_4rin71_dot_dat)
#declare _48_slash_1_dash_4rin71_dot_dat = disc {
	<0,0,0>, <0,1,0>, 72, 71
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin71_dot_dat)


//// Primitive 48\1-4rin24.dat
#ifndef (_48_slash_1_dash_4rin24_dot_dat)
#declare _48_slash_1_dash_4rin24_dot_dat = disc {
	<0,0,0>, <0,1,0>, 25, 24
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin24_dot_dat)


//// Primitive 48\1-4ring5.dat
#ifndef (_48_slash_1_dash_4ring5_dot_dat)
#declare _48_slash_1_dash_4ring5_dot_dat = disc {
	<0,0,0>, <0,1,0>, 6, 5
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4ring5_dot_dat)


//// Primitive 48\1-4rin45.dat
#ifndef (_48_slash_1_dash_4rin45_dot_dat)
#declare _48_slash_1_dash_4rin45_dot_dat = disc {
	<0,0,0>, <0,1,0>, 46, 45
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin45_dot_dat)


//// Primitive 48\1-4rin23.dat
#ifndef (_48_slash_1_dash_4rin23_dot_dat)
#declare _48_slash_1_dash_4rin23_dot_dat = disc {
	<0,0,0>, <0,1,0>, 24, 23
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin23_dot_dat)


//// Primitive 48\1-4rin48.dat
#ifndef (_48_slash_1_dash_4rin48_dot_dat)
#declare _48_slash_1_dash_4rin48_dot_dat = disc {
	<0,0,0>, <0,1,0>, 49, 48
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin48_dot_dat)


//// Primitive 48\1-4ring2.dat
#ifndef (_48_slash_1_dash_4ring2_dot_dat)
#declare _48_slash_1_dash_4ring2_dot_dat = disc {
	<0,0,0>, <0,1,0>, 3, 2
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4ring2_dot_dat)


//// Primitive 48\1-4rin32.dat
#ifndef (_48_slash_1_dash_4rin32_dot_dat)
#declare _48_slash_1_dash_4rin32_dot_dat = disc {
	<0,0,0>, <0,1,0>, 33, 32
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin32_dot_dat)


//// Primitive 48\1-4rin14.dat
#ifndef (_48_slash_1_dash_4rin14_dot_dat)
#declare _48_slash_1_dash_4rin14_dot_dat = disc {
	<0,0,0>, <0,1,0>, 15, 14
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin14_dot_dat)


//// Primitive 48\1-4rin63.dat
#ifndef (_48_slash_1_dash_4rin63_dot_dat)
#declare _48_slash_1_dash_4rin63_dot_dat = disc {
	<0,0,0>, <0,1,0>, 64, 63
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin63_dot_dat)


//// Primitive 48\1-4rin64.dat
#ifndef (_48_slash_1_dash_4rin64_dot_dat)
#declare _48_slash_1_dash_4rin64_dot_dat = disc {
	<0,0,0>, <0,1,0>, 65, 64
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin64_dot_dat)


//// Primitive 48\1-4rin37.dat
#ifndef (_48_slash_1_dash_4rin37_dot_dat)
#declare _48_slash_1_dash_4rin37_dot_dat = disc {
	<0,0,0>, <0,1,0>, 38, 37
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin37_dot_dat)


//// Primitive 48\1-4rin38.dat
#ifndef (_48_slash_1_dash_4rin38_dot_dat)
#declare _48_slash_1_dash_4rin38_dot_dat = disc {
	<0,0,0>, <0,1,0>, 39, 38
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin38_dot_dat)


//// Primitive 48\1-4rin27.dat
#ifndef (_48_slash_1_dash_4rin27_dot_dat)
#declare _48_slash_1_dash_4rin27_dot_dat = disc {
	<0,0,0>, <0,1,0>, 28, 27
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin27_dot_dat)


//// Primitive 48\1-4rin34.dat
#ifndef (_48_slash_1_dash_4rin34_dot_dat)
#declare _48_slash_1_dash_4rin34_dot_dat = disc {
	<0,0,0>, <0,1,0>, 35, 34
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin34_dot_dat)


//// Primitive 48\1-4rin82.dat
#ifndef (_48_slash_1_dash_4rin82_dot_dat)
#declare _48_slash_1_dash_4rin82_dot_dat = disc {
	<0,0,0>, <0,1,0>, 83, 82
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin82_dot_dat)


//// Primitive 48\1-4rin70.dat
#ifndef (_48_slash_1_dash_4rin70_dot_dat)
#declare _48_slash_1_dash_4rin70_dot_dat = disc {
	<0,0,0>, <0,1,0>, 71, 70
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin70_dot_dat)


//// Primitive 48\1-4rin18.dat
#ifndef (_48_slash_1_dash_4rin18_dot_dat)
#declare _48_slash_1_dash_4rin18_dot_dat = disc {
	<0,0,0>, <0,1,0>, 19, 18
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin18_dot_dat)


//// Primitive 48\1-4rin65.dat
#ifndef (_48_slash_1_dash_4rin65_dot_dat)
#declare _48_slash_1_dash_4rin65_dot_dat = disc {
	<0,0,0>, <0,1,0>, 66, 65
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin65_dot_dat)


//// Primitive 48\1-4rin11.dat
#ifndef (_48_slash_1_dash_4rin11_dot_dat)
#declare _48_slash_1_dash_4rin11_dot_dat = disc {
	<0,0,0>, <0,1,0>, 12, 11
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_48_slash_1_dash_4rin11_dot_dat)


//// Model road_corner.ldr
#ifndef (road__corner_dot_ldr)
#declare road__corner_dot_ldr = #if (L3Quality = 0) box { <-320,0,-320>, <178,0,178> } #else union {
// Baseplate 32 x 32 Road 7-Stud Curve with Road Pattern
// Name: road_corner.ldr
// Author: Steve Bliss [sbliss]
// !LDRAW_ORG Part UPDATE 2010-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
// BFC CERTIFY CCW
// !KEYWORDS roadplate, curved
// !HISTORY 1999-03-23 [sbliss] 2359.dat + 607P01.dat pattern + Mods = 2359P01.dat
// !HISTORY 1999-05-24 [PTadmin] Official Update 1999-04
// !HISTORY 2007-07-01 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-08-08 [anathema] Used subpart; BFC'd; removed edge-lines from pattern
// !HISTORY 2010-04-09 [mikeheide] Moved portions from subpart, deleted one wrong keyword (7-Stud)
// !HISTORY 2010-07-05 [PTadmin] Official Update 2010-02
	object { _48_slash_1_dash_4rin71_dot_dat matrix <2,0,0,0,1,0,0,0,2,-320,0,-320> material { L3Color15 } }
	object { _48_slash_1_dash_4rin24_dot_dat matrix <6,0,0,0,1,0,0,0,6,-320,0,-320> material { L3Color15 } }
	object { _48_slash_1_dash_4ring5_dot_dat matrix <30,0,0,0,1,0,0,0,30,-320,0,-320> }
	object { _48_slash_1_dash_4rin45_dot_dat matrix <4,0,0,0,1,0,0,0,4,-320,0,-320> }
	object { _48_slash_1_dash_4rin23_dot_dat matrix <8,0,0,0,1,0,0,0,8,-320,0,-320> material { L3Color2 } }
	object { _48_slash_1_dash_4rin48_dot_dat matrix <4,0,0,0,1,0,0,0,4,-320,0,-320> material { L3Color2 } }
	object { _48_slash_1_dash_4ring2_dot_dat matrix <98,0,0,0,1,0,0,0,98,-320,0,-320> }
	object { _48_slash_1_dash_4rin32_dot_dat matrix <9,0,0,0,1,0,0,0,9,-320,0,-320> }
	object { _48_slash_1_dash_4rin14_dot_dat matrix <21,0,0,0,1,0,0,0,21,-320,0,-320> }
	object { _48_slash_1_dash_4rin63_dot_dat matrix <5,0,0,0,1,0,0,0,5,-320,0,-320> material { L3Color15 } }
	object { _48_slash_1_dash_4rin64_dot_dat matrix <5,0,0,0,1,0,0,0,5,-320,0,-320> material { L3Color15 } }
	object { _48_slash_1_dash_4rin37_dot_dat matrix <12,0,0,0,1,0,0,0,12,-320,0,-320> material { L3Color2 } }
	object { _48_slash_1_dash_4rin38_dot_dat matrix <12,0,0,0,1,0,0,0,12,-320,0,-320> }
	object { _48_slash_1_dash_4rin27_dot_dat matrix <17,0,0,0,1,0,0,0,17,-320,0,-320> }
	object { _48_slash_1_dash_4rin34_dot_dat matrix <14,0,0,0,1,0,0,0,14,-320,0,-320> }
	object { _48_slash_1_dash_4rin82_dot_dat matrix <6,0,0,0,1,0,0,0,6,-320,0,-320> material { L3Color15 } }
	object { _48_slash_1_dash_4rin70_dot_dat matrix <7,0,0,0,1,0,0,0,7,-320,0,-320> material { L3Color15 } }
	object { _48_slash_1_dash_4rin18_dot_dat matrix <22,0,0,0,1,0,0,0,22,-320,0,-320> }
	object { _48_slash_1_dash_4ring5_dot_dat matrix <66,0,0,0,1,0,0,0,66,-320,0,-320> }
	object { _48_slash_1_dash_4rin65_dot_dat matrix <5,0,0,0,1,0,0,0,5,-320,0,-320> }
	object { _48_slash_1_dash_4rin11_dot_dat matrix <37,0,0,0,1,0,0,0,37,-320,0,-320> }
}
#end
#end // ifndef (road__corner_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-320,0,-320>;
#declare L3ModelBBoxMax = <178,0,178>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <-71,0,-71>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <498,0,498>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject road_corner.ldr
object { road__corner_dot_ldr material { L3Color7 }  rotate	y * 360 * clock}



//// Statistics
//               PARTS             P         Total
// DAT files:        1            20            21
// POV Equivs:       -            20 (100%)
// Model has 0 parts (0 studs)

//// End
